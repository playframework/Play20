@import play.routes.compiler._
@import play.routes.compiler.templates._
@(sourceInfo: RoutesSourceInfo, pkg: Option[String], imports: Seq[String], routes: Seq[Route],
  namespaceReverseRouter: Boolean, useInjector: Route => Boolean)
// @@GENERATOR:play-routes-compiler
// @@SOURCE:@sourceInfo.source
// @@DATE:@sourceInfo.date

import play.api.routing.JavaScriptReverseRoute
import play.api.mvc.@ob QueryStringBindable, PathBindable, Call, JavascriptLiteral @cb
import play.core.routing.@ob HandlerDef, ReverseRouteContext, queryString, dynamicString @cb

@for(i <- imports) {
import @if(!i.startsWith("_root_.")){_root_.}@i}

@* Can't put in the root package because Java can't refer to the root package *@
package @pkg.getOrElse("_routes_") @ob
  object RoutesPrefix @ob
    private var _prefix: String = "/"
    def setPrefix(p: String): Unit = @ob
      _prefix = p
    @cb
    def prefix: String = _prefix
    val byNamePrefix: Function0[String] = @ob () => prefix @cb
  @cb
@cb

@reverseRouter(pkg, routes, namespaceReverseRouter)

@javascriptReverseRouter(pkg, routes, namespaceReverseRouter)
